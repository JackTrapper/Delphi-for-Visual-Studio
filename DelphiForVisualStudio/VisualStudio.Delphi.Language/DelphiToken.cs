/* This file is part of "Delphi For Visual Studio" project
 * http://www.codeplex.com/Delphi4VisualStudio
 * Copyright (c) 2006 Davinci Jeremie. All rights reserved.
 * Created 2007/04/20 by Davinci Jeremie (Web: http://www.Jeremie.ca )
 * 
 * LICENSE: LGPL
 * 
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License (LGPL) as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 * 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * For more details on the GNU Lesser General Public License,
 * see http://www.gnu.org/copyleft/lesser.html
 *************************************************************************/

namespace VisualStudio.Delphi.Language
{

  public enum DelphiToken
  {
    None = 0,
    absoluteKeyword = DelphiScanner.KEYWORD_absolute,
    abstractKeyword = DelphiScanner.KEYWORD_abstract,
    andKeyword = DelphiScanner.KEYWORD_and,
    arrayKeyword = DelphiScanner.KEYWORD_array,
    asKeyword = DelphiScanner.KEYWORD_as,
    asmKeyword = DelphiScanner.KEYWORD_asm,
    beginKeyword = DelphiScanner.KEYWORD_begin,
    caseKeyword = DelphiScanner.KEYWORD_case,
    cdeclKeyword = DelphiScanner.KEYWORD_cdecl,
    classKeyword = DelphiScanner.KEYWORD_class,
    constKeyword = DelphiScanner.KEYWORD_const,
    constructorKeyword = DelphiScanner.KEYWORD_constructor,
    containsKeyword = DelphiScanner.KEYWORD_contains,
    defaultKeyword = DelphiScanner.KEYWORD_default,
    depricatedKeyword = DelphiScanner.KEYWORD_depricated,
    destructorKeyword = DelphiScanner.KEYWORD_destructor,
    dispidKeyword = DelphiScanner.KEYWORD_dispid,
    divKeyword = DelphiScanner.KEYWORD_div,
    doKeyword = DelphiScanner.KEYWORD_do,
    downtoKeyword = DelphiScanner.KEYWORD_downto,
    dynamicKeyword = DelphiScanner.KEYWORD_dynamic,
    elseKeyword = DelphiScanner.KEYWORD_else,
    endKeyword = DelphiScanner.KEYWORD_end,
    exceptKeyword = DelphiScanner.KEYWORD_except,
    exportKeyword = DelphiScanner.KEYWORD_export,
    exportsKeyword = DelphiScanner.KEYWORD_exports,
    externalKeyword = DelphiScanner.KEYWORD_external,
    farKeyword = DelphiScanner.KEYWORD_far,
    fileKeyword = DelphiScanner.KEYWORD_file,
    finalizationKeyword = DelphiScanner.KEYWORD_finalization,
    finallyKeyword = DelphiScanner.KEYWORD_finally,
    forKeyword = DelphiScanner.KEYWORD_for,
    forwardKeyword = DelphiScanner.KEYWORD_forward,
    functionKeyword = DelphiScanner.KEYWORD_function,
    gotoKeyword = DelphiScanner.KEYWORD_goto,
    ifKeyword = DelphiScanner.KEYWORD_if,
    implementationKeyword = DelphiScanner.KEYWORD_implementation,
    implementsKeyword = DelphiScanner.KEYWORD_implements,
    inKeyword = DelphiScanner.KEYWORD_in,
    indexKeyword = DelphiScanner.KEYWORD_index,
    inheritedKeyword = DelphiScanner.KEYWORD_inherited,
    initializationKeyword = DelphiScanner.KEYWORD_initialization,
    interfaceKeyword = DelphiScanner.KEYWORD_interface,
    isKeyword = DelphiScanner.KEYWORD_is,
    labelKeyword = DelphiScanner.KEYWORD_label,
    libraryKeyword = DelphiScanner.KEYWORD_library,
    localKeyword = DelphiScanner.KEYWORD_local,
    messageKeyword = DelphiScanner.KEYWORD_message,
    modKeyword = DelphiScanner.KEYWORD_mod,
    nameKeyword = DelphiScanner.KEYWORD_name,
    nearKeyword = DelphiScanner.KEYWORD_near,
    nilKeyword = DelphiScanner.KEYWORD_nil,
    nodefaultKeyword = DelphiScanner.KEYWORD_nodefault,
    notKeyword = DelphiScanner.KEYWORD_not,
    objectKeyword = DelphiScanner.KEYWORD_object,
    ofKeyword = DelphiScanner.KEYWORD_of,
    onKeyword = DelphiScanner.KEYWORD_on,
    orKeyword = DelphiScanner.KEYWORD_or,
    outKeyword = DelphiScanner.KEYWORD_out,
    overloadKeyword = DelphiScanner.KEYWORD_overload,
    overrideKeyword = DelphiScanner.KEYWORD_override,
    packageKeyword = DelphiScanner.KEYWORD_package,
    pascalKeyword = DelphiScanner.KEYWORD_pascal,
    platformKeyword = DelphiScanner.KEYWORD_platform,
    privateKeyword = DelphiScanner.KEYWORD_private,
    procedureKeyword = DelphiScanner.KEYWORD_procedure,
    programKeyword = DelphiScanner.KEYWORD_program,
    propertyKeyword = DelphiScanner.KEYWORD_property,
    protectedKeyword = DelphiScanner.KEYWORD_protected,
    publicKeyword = DelphiScanner.KEYWORD_public,
    publishedKeyword = DelphiScanner.KEYWORD_published,
    readKeyword = DelphiScanner.KEYWORD_read,
    recordKeyword = DelphiScanner.KEYWORD_record,
    registerKeyword = DelphiScanner.KEYWORD_register,
    reintroduceKeyword = DelphiScanner.KEYWORD_reintroduce,
    repeatKeyword = DelphiScanner.KEYWORD_repeat,
    requiresKeyword = DelphiScanner.KEYWORD_requires,
    resourcestringKeyword = DelphiScanner.KEYWORD_resourcestring,
    safecallKeyword = DelphiScanner.KEYWORD_safecall,
    setKeyword = DelphiScanner.KEYWORD_set,
    shlKeyword = DelphiScanner.KEYWORD_shl,
    shrKeyword = DelphiScanner.KEYWORD_shr,
    stdcallKeyword = DelphiScanner.KEYWORD_stdcall,
    storedKeyword = DelphiScanner.KEYWORD_stored,
    stringKeyword = DelphiScanner.KEYWORD_string,
    thenKeyword = DelphiScanner.KEYWORD_then,
    toKeyword = DelphiScanner.KEYWORD_to,
    tryKeyword = DelphiScanner.KEYWORD_try,
    typeKeyword = DelphiScanner.KEYWORD_type,
    unitKeyword = DelphiScanner.KEYWORD_unit,
    untilKeyword = DelphiScanner.KEYWORD_until,
    usesKeyword = DelphiScanner.KEYWORD_uses,
    varKeyword = DelphiScanner.KEYWORD_var,
    varargsKeyword = DelphiScanner.KEYWORD_varargs,
    virtualKeyword = DelphiScanner.KEYWORD_virtual,
    whileKeyword = DelphiScanner.KEYWORD_while,
    withKeyword = DelphiScanner.KEYWORD_with,
    writeKeyword = DelphiScanner.KEYWORD_write,
    xorKeyword = DelphiScanner.KEYWORD_xor,
    ItemComment = DelphiScanner.ITEM_Comment,
    CompilerDirective = DelphiScanner.COMPILER_Directive,
    EndofLineComment = DelphiScanner.COMMENT_EndofLine,
    CurlyBraceComment = DelphiScanner.COMMENT_CurlyBrace,
    BraceStarComment = DelphiScanner.COMMENT_BraceStar,
    Identifier = DelphiScanner.IDENTIFIER,
    Digit = DelphiScanner.DIGIT,
    HexNumber = DelphiScanner.HEX_Number,
    CharHexValue = DelphiScanner.CHAR_HexValue,
    CharValue = DelphiScanner.CHAR_Value,
    Float = DelphiScanner.FLOAT,
    Real = DelphiScanner.REAL,
    String = DelphiScanner.STRING,
    Assignment = DelphiScanner.ASSIGNMENT,
    DoesNotEqual = DelphiScanner.DOES_NotEqual,
    LessThanOrEqual = DelphiScanner.LESS_ThanOrEqual,
    GreaterThanOrEqual = DelphiScanner.GREATER_ThanOrEqual,
    OpenBrace = DelphiScanner.OPEN_Brace,
    CloseBrace = DelphiScanner.CLOSE_Brace,
    OpenSquareBrace = DelphiScanner.OPEN_SquareBrace,
    CloseSquareBrace = DelphiScanner.CLOSE_SquareBrace,
    Period = DelphiScanner.PERIOD,
    Operator = DelphiScanner.OPERATORS,
    Delimiter = DelphiScanner.DELIMITERS,  // , or :
    WhiteSpace = DelphiScanner.WHITE_Space,
    EndStatement = DelphiScanner.END_Statement
  };
}
